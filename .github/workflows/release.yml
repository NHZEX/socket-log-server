on:
  push:
  release:
    types: [ created ]
#    # Sequence of patterns matched against refs/tags
#    tags:
#      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build-phar:
    name: Build PHAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          ini-values: phar.readonly=0
          tools: composer:v2
          coverage: none
          extensions: zip
      - uses: ramsey/composer-install@v2
        with:
          dependency-versions: "locked"
          composer-options: "--optimize-autoloader --no-dev"
      - name: Download box
        run: |
          wget https://github.com/box-project/box/releases/download/4.3.8/box.phar
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          composer install --prefer-dist --no-dev --no-progress
          php box.phar compile
      - uses: actions/upload-artifact@v3
        name: Upload the PHAR artifact
        with:
          name: phar-archive
          path: ./bin/socket-log-server.phar

  build-swoole-linux:
    runs-on: ubuntu-latest
    name: Build Swoole-Cli SFX
    steps:
      - uses: actions/checkout@v3
        name: Checkout
        with:
          repository: swoole/swoole-cli
          ref: 79c71bbe9a655ed7f0ab09d5d160a625779c5244
          fetch-depth: 0
          submodules: true
      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: swoole-cli-build-cache
        with:
          path: |
            ./pool/lib
          key: ${{ runner.os }}-build-lib-cache-1
      - name: Prepare & Configure
        run: |
          composer install --no-dev --optimize-autoloader
          php prepare.php -gd -exif -imagick -mongodb -mysqli -mysqlnd
          chmod +x ./make.sh
          ls -lh
          ls -lh ./pool
      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: phpswoole/swoole-cli-builder:1.6
          options: -v ${{ github.workspace }}:/work
          run: |
            cd /work
            ./make.sh all-library
            ./make.sh config
            ./make.sh build
            ./bin/swoole-cli -v
            ./make.sh archive
            ls -lh
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-swoole-cli
          path: |
            swoole-cli-*

  pack-sfx:
    runs-on: ubuntu-latest
    name: Pack SFX
    needs:
      - build-phar
      - build-swoole-linux
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: phar-archive
          path: .
      - uses: actions/download-artifact@v3
        with:
          name: dist-swoole-cli
          path: .
      - name: Pack SFX
        run: |
          tar -xf  swoole-cli-*.tar.xz
          chmod +x ./swoole-cli
          ./swoole-cli ./pack-sfx.php ./socket-log-server.phar ./socket-log-server.bin
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: socket-log-linux-sfx
          path: |
            socket-log-server.bin

  publish-phar:
    runs-on: ubuntu-latest
    name: Publish the PHAR
    needs:
      - build-phar
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: phar-archive
          path: .
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./socket-log-server.phar
          asset_name: socket-log.phar
          asset_content_type: application/zip